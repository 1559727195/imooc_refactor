apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'maven'

def pomVersionName = '1.0.0-SNAPSHOT'
def pomName = this.getName()
def pomDescription = 'the audio library for all project'
def versionString = '1.0'
def versionNumber = 1

android {
  compileSdkVersion rootProject.android.compileSdkVersion

  defaultConfig {
    minSdkVersion rootProject.android.minSdkVersion
    targetSdkVersion rootProject.android.targetSdkVersion
    versionCode versionNumber
    versionName versionString
    //ARouter配置
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
      }
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  //占位主工程android原生库
  compileOnly rootProject.depsLibs.appcompact
  compileOnly rootProject.depsLibs.design
  compileOnly rootProject.depsLibs.recyclerview

  //占位主工程的greenDao类库
  compileOnly rootProject.depsLibs.greendao
  //占位主工程的eventbus库
  compileOnly rootProject.depsLibs.eventbus
  //占位主工程的rxjava库
  compileOnly rootProject.depsLibs.rxjava
  //占位主工程arouter库
  compileOnly(rootProject.depsLibs.arouterapi) {
    exclude group: 'com.android.support'
  }
  annotationProcessor rootProject.depsLibs.aroutercompiler
  //占位主工程自己源码库
  compileOnly project(':lib_image_loader')
  compileOnly project(':lib_commin_ui')
  compileOnly project(':lib_share')
  compileOnly project(':lib_base')
}

greendao {
  //其它配置保持默认,有需要再研究
  schemaVersion 1 //数据库版本号
  daoPackage 'com.imooc.lib_audio.mediaplayer.db' //dao,master类所在包
}

//上传maven配置
uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: NEXUS_REPOSITORY_URL) {
        authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
      }
      pom.project {
        name pomName
        version pomVersionName
        description pomDescription
        artifactId pomVersionName
        groupId POM_GROUPID
        packaging POM_PACKAGING
      }
    }
  }
}
